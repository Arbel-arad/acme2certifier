name: "certifier_setup_no_profile"
description: "certifier_setup_no_profile"
inputs:
  WCCE_SSH_ACCESS_KEY:
    description: "SSH access key"
    required: true
  WCCE_SSH_KNOWN_HOSTS:
    description: "SSH known hosts"
    required: true
  WCCE_SSH_USER:
    description: "SSH user"
    required: true
  WCCE_SSH_HOST:
    description: "SSH host"
    required: true
  WCCE_SSH_PORT:
    description: "SSH port"
    required: true
  NAME_SPACE:
    description: "namespace"
    required: true
    default: "acme"
  NCM_API_HOST:
    description: "NCM API host"
    required: true
  NCM_API_USER:
    description: "NCM API user"
    required: true
  NCM_API_PASSWORD:
    description: "NCM API password"
    required: true
  ACME_SRV_CFG:
    description: "acme_srv.cfg"
    required: true
    default: "acme_srv.cfg"
  DATA_PATH:
    description: "data path"
    required: true
  ACME_SRV_SRC:
    description: "acme_srv.cfg source file"
    required: true
    default: ".github/openssl_ca_handler.py_acme_srv_default_handler.cfg"

runs:
  using: "composite"
  steps:
  - name: "Setup tunnel"
    uses: ./.github/actions/wf_specific/certifier_ca_handler/tunnel_setup
    with:
      WCCE_SSH_USER: ${{ inputs.WCCE_SSH_USER }}
      WCCE_SSH_HOST: ${{ inputs.WCCE_SSH_HOST }}
      WCCE_SSH_PORT: ${{ inputs.WCCE_SSH_PORT }}
      NCM_API_HOST: ${{ inputs.NCM_API_HOST }}
      WCCE_SSH_KNOWN_HOSTS: ${{ inputs.WCCE_SSH_KNOWN_HOSTS }}
      WCCE_SSH_ACCESS_KEY: ${{ inputs.WCCE_SSH_ACCESS_KEY }}
      NCM_API_USER: ${{ inputs.NCM_API_USER }}
      NCM_API_PASSWORD: ${{ inputs.NCM_API_PASSWORD }}

  - name: "Setup a2c with certifier_ca_handler"
    run: |
      sudo cp .github/openssl_ca_handler.py_acme_srv_default_handler.cfg $DATA_PATH/$ACME_SRV_CFG
      sudo chmod 777 $DATA_PATH/$ACME_SRV_CFG
      sudo cp test/ca/certsrv_ca_certs.pem $DATA_PATH/ca_certs.pem
      sudo head -n -8 $ACME_SRV_SRC > $DATA_PATH/$ACME_SRV_CFG
      sudo echo "handler_file: examples/ca_handler/certifier_ca_handler.py" >> $DATA_PATH/$ACME_SRV_CFG
      sudo echo "api_host: https://forwarder.acme:8084" >> $DATA_PATH/$ACME_SRV_CFG
      sudo echo "ca_bundle: False" >> $DATA_PATH/$ACME_SRV_CFG
      sudo echo "api_user: $NCM_API_USER" >> $DATA_PATH/$ACME_SRV_CFG
      sudo echo "api_password: $NCM_API_PASSWORD" >> $DATA_PATH/$ACME_SRV_CFG
      sudo echo "ca_name: $NCM_CA_NAME" >> $DATA_PATH/$ACME_SRV_CFG
      # sudo echo "ca_bundle: $NCM_CA_BUNDLE" >> $DATA_PATH/$ACME_SRV_CFG
    env:
      NCM_API_HOST: ${{ inputs.NCM_API_HOST }}
      NCM_API_USER: ${{ inputs.NCM_API_USER }}
      NCM_API_PASSWORD: ${{ inputs.NCM_API_PASSWORD }}
      NCM_CA_NAME: ${{ inputs.NCM_CA_NAME }}
      NCM_CA_BUNDLE: ${{ inputs.NCM_CA_BUNDLE }}
      DATA_PATH: ${{ inputs.DATA_PATH }}
      ACME_SRV_CFG: ${{ inputs.ACME_SRV_CFG }}
      ACME_SRV_SRC: ${{ inputs.ACME_SRV_SRC }}
    shell: bash