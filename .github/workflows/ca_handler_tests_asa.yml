name: CA handler Tests - Insta ASA

on:
  push:
  pull_request:
    branches: [ devel ]
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 2 * * 6'

jobs:
  asa_handler_tests:
    name: "asa_handler_tests"
    runs-on: ubuntu-latest
    # needs: asa_handler_headerinfo_tests
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        websrv: ['apache2', 'nginx']
        dbhandler: ['wsgi', 'django']
    steps:
    - name: "checkout GIT"
      uses: actions/checkout@v4

    - name: "create folders"
      run: |
        mkdir lego
        mkdir acme-sh
        mkdir certbot

    - name: "Build container"
      uses: ./.github/actions/container_prep
      with:
        DB_HANDLER: ${{ matrix.dbhandler }}
        WEB_SRV: ${{ matrix.websrv }}

    - name: "Profile ${{ secrets.ASA_PROFILE1 }} - Setup a2c with asa_ca_handler with profile ${{ secrets.ASA_PROFILE1 }}"
      run: |
        sudo cp .github/openssl_ca_handler.py_acme_srv_default_handler.cfg examples/Docker/data/acme_srv.cfg
        sudo chmod 777 examples/Docker/data/acme_srv.cfg
        sudo cp test/ca/certsrv_ca_certs.pem examples/Docker/data/ca_certs.pem
        sudo head -n -8 .github/openssl_ca_handler.py_acme_srv_default_handler.cfg > examples/Docker/data/acme_srv.cfg
        sudo echo "handler_file: examples/ca_handler/asa_ca_handler.py" >> examples/Docker/data/acme_srv.cfg
        sudo echo "api_host: $ASA_API_HOST" >> examples/Docker/data/acme_srv.cfg
        sudo echo "api_user: $ASA_API_USER" >> examples/Docker/data/acme_srv.cfg
        sudo echo "api_password: $ASA_API_PASSWORD" >> examples/Docker/data/acme_srv.cfg
        sudo echo "api_key: $ASA_API_KEY" >> examples/Docker/data/acme_srv.cfg
        sudo echo "ca_name: $ASA_CA_NAME" >> examples/Docker/data/acme_srv.cfg
        sudo echo "ca_bundle: $ASA_CA_BUNDLE" >> examples/Docker/data/acme_srv.cfg
        sudo echo "profile_name: $ASA_PROFILE1" >> examples/Docker/data/acme_srv.cfg
        sudo sed -i "s/revocation_reason_check_disable: False/revocation_reason_check_disable: False\nenrollment_timeout:15/g" examples/Docker/data/acme_srv.cfg
        sudo echo "allowed_domainlist: [\"bar.local\", \"*.acme\"]" >> examples/Docker/data/acme_srv.cfg
        cd examples/Docker/
        docker-compose restart
      env:
        ASA_API_HOST: ${{ secrets.ASA_API_HOST }}
        ASA_API_USER: ${{ secrets.ASA_API_USER }}
        ASA_API_PASSWORD: ${{ secrets.ASA_API_PASSWORD }}
        ASA_API_KEY: ${{ secrets.ASA_API_KEY }}
        ASA_CA_NAME: ${{ secrets.ASA_CA_NAME }}
        ASA_CA_BUNDLE: ${{ secrets.ASA_CA_BUNDLE }}
        ASA_PROFILE1: ${{ secrets.ASA_PROFILE1 }}

    - name: "${{ secrets.ASA_PROFILE1 }} - enrollment"
      uses: ./.github/actions/wf_specific/asa_ca_handler/enroll_profile_1

    - name: "ACME Profile - Setup asa_ca_handler"
      run: |
        sudo cp .github/openssl_ca_handler.py_acme_srv_default_handler.cfg examples/Docker/data/acme_srv.cfg
        sudo chmod 777 examples/Docker/data/acme_srv.cfg
        sudo cp test/ca/certsrv_ca_certs.pem examples/Docker/data/ca_certs.pem
        sudo head -n -8 .github/openssl_ca_handler.py_acme_srv_default_handler.cfg > examples/Docker/data/acme_srv.cfg
        sudo echo "handler_file: examples/ca_handler/asa_ca_handler.py" >> examples/Docker/data/acme_srv.cfg
        sudo echo "api_host: $ASA_API_HOST" >> examples/Docker/data/acme_srv.cfg
        sudo echo "api_user: $ASA_API_USER" >> examples/Docker/data/acme_srv.cfg
        sudo echo "api_password: $ASA_API_PASSWORD" >> examples/Docker/data/acme_srv.cfg
        sudo echo "api_key: $ASA_API_KEY" >> examples/Docker/data/acme_srv.cfg
        sudo echo "ca_name: $ASA_CA_NAME" >> examples/Docker/data/acme_srv.cfg
        sudo echo "ca_bundle: $ASA_CA_BUNDLE" >> examples/Docker/data/acme_srv.cfg
        sudo echo "profile_name: $ASA_PROFILE1" >> examples/Docker/data/acme_srv.cfg
        sudo sed -i "s/revocation_reason_check_disable: False/revocation_reason_check_disable: False\nenrollment_timeout:15/g" examples/Docker/data/acme_srv.cfg
        sudo sed -i "s/tnauthlist_support: False/tnauthlist_support: False\nprofiles={\"$ASA_PROFILE1\": \"http:\/\/foo.bar\/profile1\", \"$ASA_PROFILE2\": \"http:\/\/foo.bar\/profile2\", \"profile3\": \"http:\/\/foo.bar\/profile3\"}/g" examples/Docker/data/acme_srv.cfg
        sudo echo "allowed_domainlist: [\"bar.local\", \"*.acme\"]" >> examples/Docker/data/acme_srv.cfg
        cd examples/Docker/
        docker-compose restart
      env:
        ASA_API_HOST: ${{ secrets.ASA_API_HOST }}
        ASA_API_USER: ${{ secrets.ASA_API_USER }}
        ASA_API_PASSWORD: ${{ secrets.ASA_API_PASSWORD }}
        ASA_API_KEY: ${{ secrets.ASA_API_KEY }}
        ASA_CA_NAME: ${{ secrets.ASA_CA_NAME }}
        ASA_CA_BUNDLE: ${{ secrets.ASA_CA_BUNDLE }}
        ASA_PROFILE1: ${{ secrets.ASA_PROFILE1 }}
        ASA_PROFILE2: ${{ secrets.ASA_PROFILE2 }}

    - name: "ACME Profile - enrollment"
      uses: ./.github/actions/wf_specific/asa_ca_handler/enroll_acmeprofile
      with:
        ASA_PROFILE1: ${{ secrets.ASA_PROFILE1 }}
        ASA_PROFILE2: ${{ secrets.ASA_PROFILE2 }}

    - name: "EAB ACME Profiling - Setup asa_ca_handler"
      run: |
        sudo cp .github/openssl_ca_handler.py_acme_srv_default_handler.cfg examples/Docker/data/acme_srv.cfg
        sudo chmod 777 examples/Docker/data/acme_srv.cfg
        sudo cp test/ca/certsrv_ca_certs.pem examples/Docker/data/ca_certs.pem
        sudo head -n -8 .github/openssl_ca_handler.py_acme_srv_default_handler.cfg > examples/Docker/data/acme_srv.cfg
        sudo echo "handler_file: examples/ca_handler/asa_ca_handler.py" >> examples/Docker/data/acme_srv.cfg
        sudo echo "api_host: $ASA_API_HOST" >> examples/Docker/data/acme_srv.cfg
        sudo echo "api_user: $ASA_API_USER" >> examples/Docker/data/acme_srv.cfg
        sudo echo "api_password: $ASA_API_PASSWORD" >> examples/Docker/data/acme_srv.cfg
        sudo echo "api_key: $ASA_API_KEY" >> examples/Docker/data/acme_srv.cfg
        sudo echo "ca_name: $ASA_CA_NAME" >> examples/Docker/data/acme_srv.cfg
        sudo echo "ca_bundle: $ASA_CA_BUNDLE" >> examples/Docker/data/acme_srv.cfg
        sudo echo "profile_name: $ASA_PROFILE1" >> examples/Docker/data/acme_srv.cfg
        sudo echo "eab_profiling: True" >> examples/Docker/data/acme_srv.cfg
        sudo sed -i "s/revocation_reason_check_disable: False/revocation_reason_check_disable: False\nenrollment_timeout:15/g" examples/Docker/data/acme_srv.cfg
        sudo sed -i "s/tnauthlist_support: False/tnauthlist_support: False\nprofiles={\"$ASA_PROFILE1\": \"http:\/\/foo.bar\/profile1\", \"$ASA_PROFILE2\": \"http:\/\/foo.bar\/profile2\", \"profile3\": \"http:\/\/foo.bar\/profile3\"}/g" examples/Docker/data/acme_srv.cfg
        sudo echo -e "\n[EABhandler]" >> examples/Docker/data/acme_srv.cfg
        sudo echo "eab_handler_file: /var/www/acme2certifier/examples/eab_handler/kid_profile_handler.py" >> examples/Docker/data/acme_srv.cfg
        sudo echo "key_file: volume/kid_profiles.json" >> examples/Docker/data/acme_srv.cfg

        sudo cp examples/eab_handler/kid_profiles.json examples/Docker/data/kid_profiles.json
        sudo chmod 777 examples/eab_handler/kid_profiles.json
        sudo sed -i "s/\"profile_id\"\: \[\"profile_1\", \"profile_2\", \"profile_3\"\]/\"profile_name\"\: \[\"$ASA_PROFILE2\", \"$ASA_PROFILE1\"\]/g" examples/Docker/data/kid_profiles.json
        sudo sed -i "s/\"profile_id\"\: \"profile_2\"/\"profile_name\"\: \"$ASA_PROFILE3\"/g" examples/Docker/data/kid_profiles.json
        sudo sed -i "s/\"ca_name\": \"example_ca_2\",/\"ca_name\": \"$ASA_CA_NAME2\"/" examples/Docker/data/kid_profiles.json
        sudo sed -i "s/\"ca_name\": \"example_ca\",/\"unknown_key\": \"unknown_value\"/g" examples/Docker/data/kid_profiles.json
        sudo sed -i "s/example.net/acme/g" examples/Docker/data/kid_profiles.json
        sudo sed -i '18,19d' examples/Docker/data/kid_profiles.json
        sudo sed -i '8,9d' examples/Docker/data/kid_profiles.json
        cd examples/Docker/
        docker-compose restart
      env:
        ASA_API_HOST: ${{ secrets.ASA_API_HOST }}
        ASA_API_USER: ${{ secrets.ASA_API_USER }}
        ASA_API_PASSWORD: ${{ secrets.ASA_API_PASSWORD }}
        ASA_API_KEY: ${{ secrets.ASA_API_KEY }}
        ASA_CA_NAME: ${{ secrets.ASA_CA_NAME }}
        ASA_CA_NAME2: ${{ secrets.ASA_CA_NAME2 }}
        ASA_CA_BUNDLE: ${{ secrets.ASA_CA_BUNDLE }}
        ASA_PROFILE1: ${{ secrets.ASA_PROFILE1 }}
        ASA_PROFILE2: ${{ secrets.ASA_PROFILE2 }}
        ASA_PROFILE3: ${{ secrets.ASA_PROFILE3 }}

    - name: "EAB ACME Profiling - enrollment"
      uses: ./.github/actions/wf_specific/asa_ca_handler/enroll_eab_acmeprofiling
      with:
        ASA_CA_NAME1: ${{ secrets.ASA_CA_NAME }}
        ASA_CA_NAME2: ${{ secrets.ASA_CA_NAME2 }}
        ASA_PROFILE1: ${{ secrets.ASA_PROFILE1 }}

    - name: "Check container configuration"
      uses: ./.github/actions/container_check
      with:
        DB_HANDLER: ${{ matrix.dbhandler }}
        WEB_SRV: ${{ matrix.websrv }}

    - name: "[ * ] collecting test logs"
      if: ${{ failure() }}
      run: |
        mkdir -p ${{ github.workspace }}/artifact/upload
        sudo cp -rp examples/Docker/data/ ${{ github.workspace }}/artifact/data/
        sudo cp -rp acme-sh/ ${{ github.workspace }}/artifact/acme-sh/
        sudo cp -rp certbot/ ${{ github.workspace }}/artifact/certbot/
        sudo cp -rp lego/ ${{ github.workspace }}/artifact/lego/
        cd examples/Docker
        docker-compose logs > ${{ github.workspace }}/artifact/docker-compose.log
        sudo tar -C ${{ github.workspace }}/artifact/ -cvzf ${{ github.workspace }}/artifact/upload/artifact.tar.gz docker-compose.log data acme-sh certbot lego

    - name: "[ * ] uploading artificates"
      uses: actions/upload-artifact@v4
      if: ${{ failure() }}
      with:
        name: asa-${{ matrix.websrv }}-${{ matrix.dbhandler }}.tar.gz
        path: ${{ github.workspace }}/artifact/upload/
