name: CA handler Tests - Insta ASA

on:
  push:
  pull_request:
    branches: [ devel ]
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 2 * * 6'

jobs:
  asa_handler_tests_rpm:
    name: "asa_handler_tests_rpm"
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        rhversion: [8, 9]
    steps:
    - name: "checkout GIT"
      uses: actions/checkout@v4

    - name: "Prepare Alma environment"
      uses: ./.github/actions/rpm_prep
      with:
        GH_SBOM_USER: ${{ secrets.GH_SBOM_USER }}
        GH_SBOM_TOKEN: ${{ secrets.GH_SBOM_TOKEN }}
        RH_VERSION: ${{ matrix.rhversion }}

    - name: "Create letsencrypt and lego folder"
      run: |
        mkdir certbot
        mkdir lego
        mkdir acme-sh

    - name: "ACME Profile - Setup asa_ca_handler with headerinfo"
      run: |
        sudo touch data/acme_srv.cfg
        sudo chmod 777 data/acme_srv.cfg
        sudo head -n -8 .github/openssl_ca_handler.py_acme_srv_default_handler.cfg > data/acme_srv.cfg
        sudo echo "handler_file: examples/ca_handler/asa_ca_handler.py" >> data/acme_srv.cfg
        sudo echo "api_host: $ASA_API_HOST" >> data/acme_srv.cfg
        sudo echo "api_user: $ASA_API_USER" >> data/acme_srv.cfg
        sudo echo "api_password: $ASA_API_PASSWORD" >> data/acme_srv.cfg
        sudo echo "api_key: $ASA_API_KEY" >> data/acme_srv.cfg
        sudo echo "ca_name: $ASA_CA_NAME" >> data/acme_srv.cfg
        sudo echo "ca_bundle: $ASA_CA_BUNDLE" >> data/acme_srv.cfg
        sudo echo "profile_name: $ASA_PROFILE1" >> data/acme_srv.cfg
        sudo sed -i "s/revocation_reason_check_disable: False/revocation_reason_check_disable: False\nenrollment_timeout:15/g" data/acme_srv.cfg
        sudo sed -i "s/tnauthlist_support: False/tnauthlist_support: False\nprofiles={\"$ASA_PROFILE1\": \"http:\/\/foo.bar\/profile1\", \"$ASA_PROFILE2\": \"http:\/\/foo.bar\/profile2\", \"profile3\": \"http:\/\/foo.bar\/profile3\"}/g" data/acme_srv.cfg
        sudo echo "allowed_domainlist: [\"bar.local\", \"*.acme\"]" >> data/acme_srv.cfg
      env:
        ASA_API_HOST: ${{ secrets.ASA_API_HOST }}
        ASA_API_USER: ${{ secrets.ASA_API_USER }}
        ASA_API_PASSWORD: ${{ secrets.ASA_API_PASSWORD }}
        ASA_API_KEY: ${{ secrets.ASA_API_KEY }}
        ASA_CA_NAME: ${{ secrets.ASA_CA_NAME }}
        ASA_CA_BUNDLE: ${{ secrets.ASA_CA_BUNDLE }}
        ASA_PROFILE1: ${{ secrets.ASA_PROFILE1 }}
        ASA_PROFILE2: ${{ secrets.ASA_PROFILE2 }}

    - name: "ACME Profile - reconfigure a2c "
      run: |
        docker exec acme-srv sh /tmp/acme2certifier/rpm_tester.sh restart

    - name: "ACME Profile  - enrollment"
      uses: ./.github/actions/wf_specific/asa_ca_handler/enroll_acmeprofile
      with:
        ASA_PROFILE1: ${{ secrets.ASA_PROFILE1 }}
        ASA_PROFILE2: ${{ secrets.ASA_PROFILE2 }}


    - name: "EAB ACME Profiling - Setup asa_ca_handler"
      run: |
        sudo touch data/acme_srv.cfg
        sudo chmod 777 data/acme_srv.cfg
        sudo head -n -8 .github/openssl_ca_handler.py_acme_srv_default_handler.cfg > data/acme_srv.cfg
        sudo echo "handler_file: examples/ca_handler/asa_ca_handler.py" >> data/acme_srv.cfg
        sudo echo "api_host: $ASA_API_HOST" >> data/acme_srv.cfg
        sudo echo "api_user: $ASA_API_USER" >> data/acme_srv.cfg
        sudo echo "api_password: $ASA_API_PASSWORD" >> data/acme_srv.cfg
        sudo echo "api_key: $ASA_API_KEY" >> data/acme_srv.cfg
        sudo echo "ca_name: $ASA_CA_NAME" >> data/acme_srv.cfg
        sudo echo "ca_bundle: $ASA_CA_BUNDLE" >> data/acme_srv.cfg
        sudo echo "profile_name: $ASA_PROFILE1" >> data/acme_srv.cfg
        sudo echo "eab_profiling: True" >> data/acme_srv.cfg
        sudo sed -i "s/revocation_reason_check_disable: False/revocation_reason_check_disable: False\nenrollment_timeout:15/g" data/acme_srv.cfg
        sudo sed -i "s/tnauthlist_support: False/tnauthlist_support: False\nprofiles={\"$ASA_PROFILE1\": \"http:\/\/foo.bar\/profile1\", \"$ASA_PROFILE2\": \"http:\/\/foo.bar\/profile2\", \"profile3\": \"http:\/\/foo.bar\/profile3\"}/g" data/acme_srv.cfg
        sudo echo -e "\n\n[EABhandler]" >> data/acme_srv.cfg
        sudo echo "eab_handler_file: /opt/acme2certifier/examples/eab_handler/kid_profile_handler.py" >> data/acme_srv.cfg
        sudo echo "key_file: /opt/acme2certifier/volume/acme_ca/kid_profiles.json" >> data/acme_srv.cfg

        sudo cp examples/eab_handler/kid_profiles.json data/acme_ca/kid_profiles.json
        sudo chmod 777 data/acme_ca/kid_profiles.json
        sudo sed -i "s/\"profile_id\"\: \[\"profile_1\", \"profile_2\", \"profile_3\"\]/\"profile_name\"\: \[\"$ASA_PROFILE2\", \"$ASA_PROFILE1\"\]/g" data/acme_ca/kid_profiles.json
        sudo sed -i "s/\"profile_id\"\: \"profile_2\"/\"profile_name\"\: \"$ASA_PROFILE3\"/g" data/acme_ca/kid_profiles.json
        sudo sed -i "s/\"ca_name\": \"example_ca_2\",/\"ca_name\": \"$ASA_CA_NAME2\"/" data/acme_ca/kid_profiles.json
        sudo sed -i "s/\"ca_name\": \"example_ca\",/\"unknown_key\": \"unknown_value\"/g" data/acme_ca/kid_profiles.json
        sudo sed -i "s/example.net/acme/g" data/acme_ca/kid_profiles.json
        sudo sed -i '18,19d' data/acme_ca/kid_profiles.json
        sudo sed -i '8,9d' data/acme_ca/kid_profiles.json
      env:
        ASA_API_HOST: ${{ secrets.ASA_API_HOST }}
        ASA_API_USER: ${{ secrets.ASA_API_USER }}
        ASA_API_PASSWORD: ${{ secrets.ASA_API_PASSWORD }}
        ASA_API_KEY: ${{ secrets.ASA_API_KEY }}
        ASA_CA_NAME: ${{ secrets.ASA_CA_NAME }}
        ASA_CA_NAME2: ${{ secrets.ASA_CA_NAME2 }}
        ASA_CA_BUNDLE: ${{ secrets.ASA_CA_BUNDLE }}
        ASA_PROFILE1: ${{ secrets.ASA_PROFILE1 }}
        ASA_PROFILE2: ${{ secrets.ASA_PROFILE2 }}
        ASA_PROFILE3: ${{ secrets.ASA_PROFILE3 }}

    - name: "EAB ACME Profiling - Reconfigure a2c "
      run: |
        docker exec acme-srv sh /tmp/acme2certifier/rpm_tester.sh restart

    - name: "EAB ACME Profiling - enrollment"
      uses: ./.github/actions/wf_specific/asa_ca_handler/enroll_eab_acmeprofile
      with:
        ASA_CA_NAME1: ${{ secrets.ASA_CA_NAME }}
        ASA_CA_NAME2: ${{ secrets.ASA_CA_NAME2 }}
        ASA_PROFILE1: ${{ secrets.ASA_PROFILE1 }}

    - name: "[ * ] collecting test logs"
      if: ${{ failure() }}
      run: |
        mkdir -p ${{ github.workspace }}/artifact/upload
        docker exec acme-srv tar cvfz /tmp/acme2certifier/a2c.tgz /opt/acme2certifier
        sudo cp -rp data/ ${{ github.workspace }}/artifact/data/
        sudo rm ${{ github.workspace }}/artifact/data/*.rpm
        sudo cp -rp acme-sh/ ${{ github.workspace }}/artifact/acme-sh/
        docker exec acme-srv cat /etc/nginx/nginx.conf.orig > ${{ github.workspace }}/artifact/data/nginx.conf.orig
        docker exec acme-srv cat /etc/nginx/nginx.conf > ${{ github.workspace }}/artifact/data/nginx.conf
        docker exec acme-srv cat /var/log/messages > ${{ github.workspace }}/artifact/acme-srv.log
        sudo tar -C ${{ github.workspace }}/artifact/ -cvzf ${{ github.workspace }}/artifact/upload/artifact.tar.gz data acme-srv.log acme-sh

    - name: "[ * ] uploading artificates"
      uses: actions/upload-artifact@v4
      if: ${{ failure() }}
      with:
        name: asa_handler_tests_rpm-rh${{ matrix.rhversion }}.tar.gz
        path: ${{ github.workspace }}/artifact/upload/
