name: Application Tests - win-acme

on:
  push:
  pull_request:
    branches: [ devel ]
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 2 * * 6'

jobs:

  win_acme:
    name: "win_acme"
    runs-on: windows-latest

    steps:
    - name: "checkout GIT"
      uses: actions/checkout@v2

    - name: "[ PREPARE ] get RunnerIP"
      run: |
        $runner_ip=(Get-NetIPAddress -AddressFamily IPv4 -InterfaceAlias Ethernet).IPAddress
        echo RUNNER_IP=$runner_ip >> $env:GITHUB_ENV

    - name: "[ PREPARE ] echo RunnerIP"
      run:  echo $env:RUNNER_IP

    - name: "[ PREPARE ] Create DNS entries "
      run: |
        Invoke-RestMethod -ContentType "application/json" -Method PUT -Uri ${{ secrets.CF_DYNAMOP_URL }} -Headers @{Authorization="Bearer ${{ secrets.CF_TOKEN }}"} -UseBasicParsing -Body '{"type":"A","name":"${{ secrets.CF_WINACME1_NAME }}","content":"${{ env.RUNNER_IP }}","ttl":120,"proxied":false}'

    - name: "[ PREPARE ] Build local acme2certifier environment"
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install django==2.2
        pip install pyyaml
        cp examples/db_handler/django_handler.py acme_srv/db_handler.py
        cp examples/django/* .\ -Recurse -Force
        (Get-Content .github/django_settings.py) -replace '/var/www/acme2certifier/volume/db.sqlite3', 'volume/db.sqlite3' | Set-Content acme2certifier/settings.py
        cat acme2certifier/settings.py
        cp examples/ca_handler/openssl_ca_handler.py acme2certifier/ca_handler.py
        cp .github/openssl_ca_handler.py_acme_srv_choosen_handler.cfg acme_srv/acme_srv.cfg
        mkdir .\volume/acme_ca/certs
        cp test/ca/*.pem volume/acme_ca/
    - name: "[ PREPARE ] configure server"
      run: |
        python manage.py makemigrations
        python manage.py migrate
        python manage.py loaddata acme_srv/fixture/status.yaml
    - name: "[ PREPARE ] try to get up the server"
      run: |
        Start-Process powershell {python .\manage.py runserver 0.0.0.0:8080 3>&1 2>&1 > volume\redirection.log}
    - name: "[ PREPARE ] Sleep for 5s"
      uses: juliangruber/sleep-action@v1
      with:
        time: 5s

    - name: "Test if directory ressource is accessable"
      run: |
        get-Process python
        Invoke-RestMethod -Uri http://127.0.0.1:8080/directory -NoProxy -TimeoutSec 5
        [System.Net.Dns]::GetHostByName('localhost').HostName
        ([System.Net.Dns]::GetHostByName(($env:computerName))).Hostname

    - name: "Download win-acme"
      run: |
        Invoke-RestMethod -Uri https://github.com/win-acme/win-acme/releases/download/v2.1.20.1/win-acme.v2.1.20.1185.x64.trimmed.zip -OutFile win-acme.zip
        Expand-Archive .\win-acme.zip
        mkdir win-acme\certs
        dir win-acme\*

    - name: "Enroll certificate via win-acme"
      run: |
        .\win-acme\wacs.exe --baseuri http://127.0.0.1:8080 --emailaddress=grindsa@bar.local --pemfilespath win-acme\certs --source manual --host ${{ secrets.CF_WINACME1_NAME }},${{ secrets.CF_WINACME2_NAME }}  --store pemfiles  --force

    - name: "[ * ] collecting test logs"
      if: ${{ failure() }}
      run: |
        mkdir ${{ github.workspace }}\artifact\upload
        cp volume ${{ github.workspace }}\artifact\upload/ -Recurse -Force
        cp acme_srv\acme_srv.cfg ${{ github.workspace }}\artifact\upload

    - name: "[ * ] uploading artificates"
      uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: win-acme.tar.gz
        path: ${{ github.workspace }}/artifact/upload/
