# workflow to run the acme2certifier unittest suite

name: Python Tests

on:
  push:
  pull_request:
    branches: [ devel ]

jobs:
  unittest_38:
    runs-on: ubuntu-latest
    name: Python Unittest (3.8)
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: cp
      run: |
         cp examples/ca_handler/skeleton_ca_handler.py acme/ca_handler.py
         cp examples/acme_srv.cfg acme/
    - name: Python test
      run: |
        pytest
  unittest_37:
    runs-on: ubuntu-latest
    name: Python Unittest (3.7)
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: cp
        run: |
          cp examples/ca_handler/skeleton_ca_handler.py acme/ca_handler.py
          cp examples/acme_srv.cfg acme/
      - name: Python test
        run: |
          pytest
  unittest_36:
    runs-on: ubuntu-latest
    name: Python Unittest (3.6)
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: cp
        run: |
          cp examples/ca_handler/skeleton_ca_handler.py acme/ca_handler.py
          cp examples/acme_srv.cfg acme/
      - name: Python test
        run: |
          pytest
  pylint:
    runs-on: ubuntu-latest
    name: Pylint test
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint pylint-exit
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: cp
        run: |
          cp examples/ca_handler/skeleton_ca_handler.py acme/ca_handler.py
          cp examples/acme_srv.cfg acme/
      - name: "Pylint folder: acme"
        run: |
          pylint --rcfile=".github/pylintrc" acme/ || pylint-exit $?
      - name: "Pylint folder: tools"
        run: |
          pylint --rcfile=".github/pylintrc" tools/ || pylint-exit $?
      - name: "Pylint folder: examples"
        run: |
          pylint --rcfile=".github/pylintrc" examples/ || pylint-exit $?
