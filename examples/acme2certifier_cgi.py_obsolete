#!/usr/bin/python
""" cgi based acme server for Netguard Certificate manager / Insta certifier """
from __future__ import print_function
import os
import sys
import json
from acme.acmesrv import Account, Directory, Nonce

def return_error(text):
    """ returns an error message """
    if text:
        return json.dumps({'error': text})
    else:
        return json.dumps({'error': 'dont now what to do'})

if __name__ == "__main__":

    DBNAME = 'acme.db'
    DEBUG = False
    
    HTTP_CODE_DIC = {
        200 : 'Created',
        201 : 'OK',
        400 : 'Bad Request',
        401 : 'Unauthorized',
        403 : 'Forbidden',
        404 : 'Not Found',
        405 : 'Method Not Allowed'
    }

    # obtain servername
    if 'SERVER_NAME' in os.environ:
        SERVER_NAME = os.environ['SERVER_NAME']
    else:
        SERVER_NAME = None

    # obtain path
    if 'REQUEST_URI' in os.environ:
        URI = os.environ['REQUEST_URI']
    else:
        URI = None

    DIRECTORY = Directory(DEBUG, SERVER_NAME)
    NONCE = Nonce(DEBUG)
    ACCOUNT = Account(DEBUG, SERVER_NAME)

    if SERVER_NAME:
        if URI == '/acme/newaccount':
            if os.environ['REQUEST_METHOD'] == 'POST':
                response_dic = ACCOUNT.new(sys.stdin.read())
                print('Status: {0} {1}'.format(response_dic['code'], HTTP_CODE_DIC[response_dic['code']]))
                # generate new nonce                
                print('Replay-Nonce: {0}'.format(NONCE.generate_and_add()))
                for element in response_dic['header']:
                    print('{0}: {1}'.format(element, response_dic['header'][element]))
                print('Content-Type: application/json')
                print()
                # print(response_dic)
                # create the response
                print(json.dumps(response_dic['data']))

            else:
                print('Status: 405 {0}'.format(HTTP_CODE_DIC[405]))
                print('Content-Type: application/json')
                print()
                print(json.dumps({'status':405, 'message':HTTP_CODE_DIC[405], 'detail': 'Wrong request type. Expected POST.'}))

        elif URI == '/acme/newnonce':
            if os.environ['REQUEST_METHOD'] == 'HEAD':
                print('Replay-Nonce: {0}'.format(NONCE.generate_and_add()))
                print('Content-type: text/html')
                print()
            else:
                print('Status: 405 {0}'.format(HTTP_CODE_DIC[405]))
                print('Content-Type: application/json')
                print()
                print(json.dumps({'status':405, 'message':HTTP_CODE_DIC[405], 'detail': 'Wrong request type. Expected HEAD.'}))
                
        elif URI == '/directory' or URI == '/':
            print('Status: 200 {0}'.format(HTTP_CODE_DIC[200]))   
            print('Content-Type: application/json')
            print()        
            print(json.dumps(DIRECTORY.directory_get()))            
        else:
            print('Status: 404 {0}'.format(HTTP_CODE_DIC[404]))   
            print('Content-Type: application/json')
            print()
            print(json.dumps({'status':404, 'message':HTTP_CODE_DIC[404], 'detail': 'Not Found'}))
    else:
        print(return_error('SERVER_NAME missing'))
